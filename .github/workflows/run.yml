name: arXiv-weekly-ai-enhanced

on:
  schedule:
    # 每周一早上 8:30 UTC 运行（北京时间 16:30）
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv sync

    - name: Crawl last week's arXiv papers
      id: crawl_step
      run: |
        source .venv/bin/activate

        # 计算上周一到上周日的日期范围
        week_start=$(date -u -d "last monday -7 days" "+%Y-%m-%d")
        week_end=$(date -u -d "last sunday" "+%Y-%m-%d")
        filename="week_${week_start}_to_${week_end}.jsonl"

        echo "开始爬取 ${week_start} 至 ${week_end} 的arXiv论文..."
        echo "输出文件名: data/${filename}"

        # 检查文件是否存在
        if [ -f "data/${filename}" ]; then
            echo "🗑️ 发现上周数据文件已存在，删除重新生成..."
            rm "data/${filename}"
        fi

        cd daily_arxiv
        export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        export OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }}
        export LANGUAGE="${{ vars.LANGUAGE }}"
        export KEYWORDS="${{ vars.KEYWORDS }}"
        export MODEL_NAME="${{ vars.MODEL_NAME }}"
        export WEEK_START=$week_start
        export WEEK_END=$week_end

        # 调用 spider（你需确保 spider 支持 week 参数）
        scrapy crawl arxiv_weekly -a start_date=$week_start -a end_date=$week_end -o ../data/${filename}

        if [ ! -f "../data/${filename}" ]; then
            echo "❌ 爬取失败，未生成数据文件"
            exit 1
        fi

        echo "crawl_filename=${filename}" >> $GITHUB_OUTPUT
        echo "✅ 每周爬取完成: ${filename}"

    - name: Check for duplicates
      id: dedup_check
      run: |
        source .venv/bin/activate
        echo "执行去重检查..."

        cd daily_arxiv
        python daily_arxiv/check_stats.py
        dedup_exit_code=$?

        echo "dedup_exit_code=$dedup_exit_code" >> $GITHUB_OUTPUT

        case $dedup_exit_code in
          0)
            echo "has_new_content=true" >> $GITHUB_OUTPUT ;;
          1)
            echo "has_new_content=false" >> $GITHUB_OUTPUT
            echo "skip_reason=no_new_content" >> $GITHUB_OUTPUT ;;
          2)
            echo "has_new_content=false" >> $GITHUB_OUTPUT
            echo "skip_reason=processing_error" >> $GITHUB_OUTPUT
            exit 1 ;;
          *)
            echo "has_new_content=false" >> $GITHUB_OUTPUT
            echo "skip_reason=unknown_error" >> $GITHUB_OUTPUT
            exit 1 ;;
        esac

    - name: AI Enhancement Processing
      if: steps.dedup_check.outputs.has_new_content == 'true'
      run: |
        source .venv/bin/activate
        filename=${{ steps.crawl_step.outputs.crawl_filename }}

        echo "开始AI增强处理..."
        cd ai
        export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        export OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }}
        export LANGUAGE="${{ vars.LANGUAGE }}"
        export MODEL_NAME="${{ vars.MODEL_NAME }}"

        python enhance.py --data ../data/${filename}

        echo "✅ AI增强处理完成"

    - name: Convert to Markdown
      if: steps.dedup_check.outputs.has_new_content == 'true'
      run: |
        source .venv/bin/activate
        filename=${{ steps.crawl_step.outputs.crawl_filename }}
        export LANGUAGE="${{ vars.LANGUAGE }}"

        cd to_md
        AI_FILE="../data/${filename%.*}_AI_enhanced_${LANGUAGE}.jsonl"

        if [ -f "$AI_FILE" ]; then
          echo "使用AI增强文件进行转换..."
          python convert.py --data "$AI_FILE"
        else
          echo "错误：未找到AI增强文件"
          exit 1
        fi

    - name: Update file list
      if: steps.dedup_check.outputs.has_new_content == 'true'
      run: |
        echo "更新文件列表..."
        ls data/*.jsonl | sed 's|data/||' > assets/file-list.txt

    - name: Commit & Push
      if: steps.dedup_check.outputs.has_new_content == 'true'
      run: |
        git config --global user.email "${{ vars.EMAIL }}"
        git config --global user.name "${{ vars.NAME }}"
        git add .
        if git diff --staged --quiet; then
          echo "没有变更需要提交"
          exit 0
        fi
        git commit -m "weekly update: $(date -u '+%Y-%m-%d') arXiv papers"
        git push origin main

    - name: Summary
      run: |
        if [ "${{ steps.dedup_check.outputs.has_new_content }}" = "true" ]; then
          echo "✅ 每周爬取流程完成，包含新内容"
        else
          echo "ℹ️ 本周无新内容，跳过更新"
        fi
